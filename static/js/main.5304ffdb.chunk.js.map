{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","Container","styled","form","AuthInput","input","AuthSwitch","span","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","onChange","event","target","name","value","console","log","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","type","placeholder","required","className","onClick","prev","AuthContainer","div","AuthBtns","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","NweetContainer","NweetForm","NweetAction","Nweet","nweetObject","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentURL","toggleEditing","update","src","alt","faTrash","faPencilAlt","FactoryForm","FactoryInputContainer","Attachment","AttachmentClear","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","nweetObj","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","key","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","FormInput","autoFocus","FormBtn","LogOut","signOut","push","NavList","ul","User","Navigation","to","faUser","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5304ffdb.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n    console.log(event.target.name);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let data;\n    if (newAccount) {\n      //create account\n      data = await authService.createUserWithEmailAndPassword(email, password);\n    } else {\n      //log in\n      data = await authService.signInWithEmailAndPassword(email, password);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <Container onSubmit={onSubmit}>\n        <AuthInput\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <AuthInput\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <AuthInput\n          className=\"authSubmit\"\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign in\"}\n        />\n      </Container>\n      <AuthSwitch onClick={toggleAccount}>\n        {newAccount ? \"Sign in\" : \"Create Account\"}\n      </AuthSwitch>\n    </>\n  );\n};\n\nconst Container = styled.form`\n  width: 100%;\n  max-width: 320px;\n  display: flex;\n  flex-direction: column;\n  .authSubmit {\n    text-align: center;\n    background: #04aaff;\n    color: white;\n    margin-top: 10;\n    cursor: pointer;\n  }\n`;\n\nconst AuthInput = styled.input`\n  max-width: 320px;\n  width: 100%;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: rgba(255, 255, 255, 1);\n  margin-bottom: 10px;\n  font-size: 12px;\n  color: black;\n`;\n\nconst AuthSwitch = styled.span`\n  color: #04aaff;\n  cursor: pointer;\n  margin-top: 10px;\n  margin-bottom: 50px;\n  display: block;\n  font-size: 12px;\n  text-decoration: underline;\n`;\n\nexport default AuthForm;\n","import React from \"react\";\nimport { firebaseInstance, authService } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\nimport styled from \"styled-components\";\nimport {\n  faGithub,\n  faGoogle,\n  faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <AuthContainer>\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04aaff\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <AuthBtns>\n        <button name=\"google\" onClick={onSocialClick}>\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button name=\"github\" onClick={onSocialClick}>\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </AuthBtns>\n    </AuthContainer>\n  );\n};\n\nconst AuthContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst AuthBtns = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  max-width: 320px;\n  button {\n    cursor: pointer;\n    border-radius: 20px;\n    border: none;\n    padding: 10px 0px;\n    font-size: 12px;\n    text-align: center;\n    width: 150px;\n    background: white;\n    cursor: pointer;\n  }\n`;\nexport default Auth;\n","import { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Nweet = ({ nweetObject, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObject.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    console.log(ok);\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObject.id}`).delete();\n      await storageService.refFromURL(nweetObject.attachmentURL).delete();\n    }\n  };\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObject.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <NweetContainer>\n      {editing ? (\n        <>\n          <NweetForm onSubmit={onSubmit} className=\"nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"edit your nweet\"\n              value={newNweet}\n              required\n              onChange={onChange}\n            />\n            <input type=\"submit\" value=\"Update Nweet!\" className=\"formBtn\" />\n          </NweetForm>\n          <span onClick={toggleEditing} className=\"formBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObject.text}</h4>\n          {nweetObject.attachmentURL && (\n            <img src={nweetObject.attachmentURL} alt=\"nweet_img\" />\n          )}\n          {isOwner && (\n            <NweetAction>\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </NweetAction>\n          )}{\" \"}\n        </>\n      )}\n    </NweetContainer>\n  );\n};\n\nconst NweetContainer = styled.div`\n  margin-bottom: 20px;\n  background-color: white;\n  width: 100%;\n  max-width: 320px;\n  padding: 20px;\n  border-radius: 10px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  color: rgba(0, 0, 0, 0.8);\n  .nweetEdit .formBtn {\n    cursor: pointer;\n    margin-top: 15px;\n    margin-bottom: 5px;\n  }\n\n  .formBtn {\n    cursor: pointer;\n    width: 100%;\n    padding: 7px 20px;\n    text-align: center;\n    color: white;\n    border-radius: 20px;\n    background-color: #04aaff;\n    cursor: pointer;\n  }\n\n  h4 {\n    font-size: 14px;\n  }\n  img {\n    right: -10px;\n    top: 20px;\n    position: absolute;\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    margin-top: 10px;\n  }\n`;\n\nconst NweetForm = styled.form`\n  width: 100%;\n  max-width: 320px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst NweetAction = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  span {\n    cursor: pointer;\n  }\n\n  span:first-child {\n    margin-right: 10px;\n  }\n`;\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentURL = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentURL = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentURL,\n    };\n    setNweet(\"\");\n    setAttachment(\"\");\n    await dbService.collection(\"nweets\").add(nweetObj);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    console.log(theFile);\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n  };\n  return (\n    <FactoryForm onSubmit={onSubmit}>\n      <FactoryInputContainer>\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </FactoryInputContainer>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add Photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{ opacity: 0 }}\n      />\n      {attachment && (\n        <Attachment>\n          <img\n            src={attachment}\n            alt=\"img\"\n            style={{ backgroundImage: attachment }}\n          />\n          <AttachmentClear onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </AttachmentClear>\n        </Attachment>\n      )}\n    </FactoryForm>\n  );\n};\n\nconst FactoryForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nconst FactoryInputContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  position: relative;\n  margin-bottom: 20px;\n  width: 100%;\n  .factoryInput__input {\n    flex-grow: 1;\n    height: 40px;\n    padding: 0px 20px;\n    color: white;\n    border: 1px solid #04aaff;\n    border-radius: 20px;\n    font-weight: 500;\n    font-size: 12px;\n  }\n  .factoryInput__arrow {\n    position: absolute;\n    right: 0;\n    background-color: #04aaff;\n    height: 40px;\n    width: 40px;\n    padding: 10px 0px;\n    text-align: center;\n    border-radius: 20px;\n    color: white;\n    box-sizing: border-box;\n  }\n`;\n\nconst Attachment = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  img {\n    height: 80px;\n    width: 80px;\n    border-radius: 40px;\n  }\n`;\n\nconst AttachmentClear = styled.div`\n  color: #04aaff;\n  cursor: pointer;\n  text-align: center;\n\n  span {\n    margin-right: 10px;\n    font-size: 12px;\n  }\n`;\n\nexport default NweetFactory;\n","import Nweet from \"components/Nweet\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport NweetFactory from \"components/NweetFactory\";\nimport styled from \"styled-components\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <Container>\n      <NweetFactory userObj={userObj} />\n      <div>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObject={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 320px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport default ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({ displayName: newDisplayName });\n      refreshUser();\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <FormInput\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display Name\"\n          value={newDisplayName}\n        />\n        <FormBtn type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <LogOut onClick={onLogOutClick}>Log Out</LogOut>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 320px;\n  display: flex;\n  flex-direction: column;\n  .profileForm {\n    border-bottom: 1px solid rgba(255, 255, 255, 0.9);\n    padding-bottom: 30px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst FormInput = styled.input`\n  width: 100%;\n  padding: 10px 20px;\n  border-radius: 20px;\n  border: 1px solid black;\n  text-align: center;\n  background-color: white;\n  color: black;\n`;\n\nconst FormBtn = styled.input`\n  margin-top: 10px;\n  cursor: pointer;\n  width: 100%;\n  padding: 7px 20px;\n  text-align: center;\n  color: white;\n  border-radius: 20px;\n  background-color: #04aaff;\n  cursor: pointer;\n`;\n\nconst LogOut = styled.span`\n  width: 100%;\n  padding: 7px 20px;\n  text-align: center;\n  color: white;\n  border-radius: 20px;\n  cursor: pointer;\n  margin-top: 50px;\n  margin-bottom: 5px;\n  background-color: tomato;\n`;\n","import { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <NavList>\n      <li>\n        <Link to=\"/\" className=\"nav-home-link\">\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link to=\"/profile\" className=\"nav-profile-link\">\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <User>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </User>\n        </Link>\n      </li>\n    </NavList>\n  </nav>\n);\n\nconst NavList = styled.ul`\n  display: flex;\n  justify-content: center;\n  margin-top: 80px;\n  margin-bottom: 80px;\n  .nav-home-link {\n    margin-right: 10px;\n  }\n  .nav-profile-link {\n    margin-left: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-size: 12px;\n  }\n`;\n\nconst User = styled.span`\n  margin-top: 10px;\n`;\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"../components/Navigation\";\nimport styled from \"styled-components\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <Container>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </Container>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nconst Container = styled.div`\n  max-width: 890;\n  width: 100%;\n  margin: 0 auto;\n  margin-top: 80;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => {\n            user.updateProfile(args);\n          },\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => {\n        user.updateProfile(args);\n      },\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Intialiizng...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}